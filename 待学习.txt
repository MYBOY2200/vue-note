1.slot-scoped (让父组件中插槽内容能够访问子组件中才有的数据，需要在子组件设置插槽prop，然后在父组件的template中使用slot-scoped)(这个是旧语法新语法详见官网教程)
2.弹出层限制背景滚动 (设置body overflow:hidden)
3.js报错是否继续执行 (不执行)
4.rem	(相对于 <html> 元素的 font-size 的相对值)
5.:error-sync (已解决)
6.props的单向数据流 (想修改引用型子组件prop,应在子组件另起一个data，赋了初始值为prop后(父组件的data改变,子组件的关联data并不会跟着改变)，修改的时候要重新赋值一个新的引用型数据才不会影响父组件(或者用slice之后再赋值给子组件data最简单))
		    （若不想修改，只是根据prop做格式化输出,用computed(依旧利用slice)）
7.mixins （已了解）
8.箭头函数this(callback作为props) (已解决,详看es6箭头函数this指向教程)
9.promise异步编程 async/await用法 （async函数完全可以看作多个异步操作，包装成的一个 Promise 对象(async函数的返回值为promise对象)，而await命令就是内部then命令的语法糖(await后面紧跟的是一个promise对象，await返回的是resolve或者reject的值)。）
10.插槽的使用,研究一下数据流。(已解决)
11.深入响应式原理 (已解决)
12.数组去重 （推荐数组filter方法，不改变原数组）a.filter((ele,index,arr)=>{return arr.indexOf(ele)===index})
13.axios一次获取多个接口 (axios.all([a,b]),只有a,b两个接口都获取成功才会执行all的then，只要有一个接口获取失败了，执行catch)
14.异步任务串行执行和并行执行 (串行就例如setTimeout的嵌套，并行例如setTimeout不嵌套)
15.请求拦截器 (请求前和响应前拦截axios.interceptors.request.use())
16.在发送请求之前修改数据 (axios.default.transformRequest)
17.$emit派发多个参数，在父组件使用的时候还加入自定义参数；van-swipe-cell的before-close 回调函数中的参数问题 （单个参数$event是实参，多个参数arguments对象是实参）
18.函数参数传对象默认值（MDN对象解构赋值）
21.路由守卫（已学习）
22.动态路由匹配中this.$route.params(已解决)
27.query传参传对象会如何（参数值会以%5Bobject%20Object%5D的形式展现，params同理）
28.一个带name属性的van-field的#input插槽有两个v-model的时候对应的values会怎么样
	(values对象中name属性对应的键只对应#input中第一个v-model值，要拼接多个值只能用data中的数据)
	(其中一个van-field会对应一个name,不写的话在values对象中的键是undefinded,值是空字符串"")
	(其中多个van-field可以嵌套在某一个van-field的#input插槽里面)
29.深度选择器/deep/(可以确保设置框架里某些不好取的样式以及把样式渗透到子组件)
30.update钩子（更改了绑定到dom上的data数据updated钩子才会触发，单单是改data数据或者是修改dom都不会触发）
32.安卓和苹果对js日期的支持比较(new Date('2015-1-1')和new Date('2015/1/1'))(已解决)
33.路由重定向和前置路由守卫的先后(重定向先)
24.Iterator接口，Map 和 Set 结构，Generator 函数(已学习)

26.push和replace的区别(push后浏览器返回是之前的url路径；replace后把之前的替换掉了，浏览器返回后是之前再之前的路径)
27.require.js（解决异步加载js文件和js文件之前的依赖问题）
31.脚手架3.x版本使用图片（v-bind变量的方式需要用require语法，得到的是字符串；直接赋值src可以用绝对路径或者相对路径；最终显示出来的src是一样的）
19.路由权限管理(利用全局路由钩子判断是否需要登录；利用局部路由钩子判断是否有特定身份；通过路由meta对象和vuex或localstorage记录的登录状态做判断)
20.vuex设置登录状态(已学习)
32.ngnix部署(已了解)
33.下拉菜单模糊搜索(已实现regexp.test(string))
33.自定义指令(已了解)
33.虚拟dom vnode(已了解)
33.元素的dataset(已了解)
34.render渲染函数(已了解)
27.移动端app思路：1）uniapp 2)原生App（不属于我们）3）wap2app打包做好的H5网页(做好的H5网页必须要有域名,线下项目不行，内网项目需要用H5+app进行打包) 4）H5+app打包，可以把做好的H5网页做成线下的安装包，包括安卓和ios，也可以上架，上架前需要修改打包前原web代码，如修改axios的baseurl为直接的后端地址，以及修改config里的publicPath为./，取消所有路由懒加载，mode改为hash
29.移动端1px细线实现(可用伪元素、CSS3的缩放、媒体查询做到自适应真正的1px)
28.flex布局的flex-basis；flex布局被内容挤乱的原因(设置百分比宽度固定布局,flex-basis会被挤乱；或者子元素word-break:break-all设置文字换行（推荐）)
29: v-if在组件中使用（可以使用）
30：v-for在组件中使用(可以使用，必须绑定key，为了把迭代数据传递到组件里，要使用 prop)
30.$emit派发多个参数怎么取(父组件使用方法时入参为arguments对象，函数里用[...x]获取派发出来的数组)
31.怎么判断是空对象和空数组(数组转Number([])为''，或者length，对象Object.keys({}),使用Number()判断,或者length)
32.props默认值为数组或对象需要工厂函数(已解决)
33.数组对象依据某个字段整合分组(已解决)
34.computed的getter和setter，以及配合父子组件prop通讯使用(错误使用，正确是用watch观察prop，改动data)
35.v-model在组件中使用，组件model选项改变默认行为，以及v-model的原理(已学习)
28.publicPath（./相对路径好处：可以部署到任意域名下，因为用的相对路径，只要整个项目迁移，图片资源就不会出问题，所以打包成安卓app需要./，同时不能使用路由history模式和pages多页面应用，注意：用了./页面刷新会报错）
30.三元表达式连写（var a = true；var b= false；var c = a?'a':b?'b':'c'//'c'）按左到右的顺序判断
31.短路运算连写||(var d = a || b || c)按左到右的顺序判
29.loading原生实现(已实现，利用svg和css3的animation)
31.多层组件传值(已学习，利用v-bind="$attrs" v-on="$listeners")
27.https和h5扫码(h5扫码需要https的网站，nginx配置https需要证书并放在nginx安装文件中，位置可以自己指定，并在conf文件里配置)
27.important不同层级是否后者优先（都是!important的时候谁权重高谁优先,若权重一样，以后定义的样式为准）
28.transition父盒子设置了 子盒子是否能取消（transition属性不能继承，需在本盒子设定）
29.websoket的使用(已了解)
30.微信小程序学习(已了解)
31.小程序web-view（外网网站需要在小程序后台设置业务域名，跟小程序关联的公众号中的网页不需要设置，若网页要使用jssdk则需要公众号，用扫一扫功能甚至需要企业认证，jssdk必须在微信浏览器中使用）
31.cookie学习（可服务器后端设置，体现在响应头;也可以前端用js设置返回的数据，都是会在请求头自动带上，或者自己手动传参
32.H5+App学习(已了解)
32.nginx学习(已了解)
34.computed的原理(已了解)
23.单元测试 e2e测试 eslint
25.class中的static(静态方法，实例不继承，相当于不写入原型，直接通过类调用，可跟非静态同名，可被子类继承；静态属性同上；私有属性和方法前面加上#,并且不能被子类继承)
26.nodejs(ECMAScript 和 NPM以及Native)
27.实现native扫码支付(需要公众号和商户号,然后调用api接口，返回url，生成二维码,用户扫码支付，商户后台确定)